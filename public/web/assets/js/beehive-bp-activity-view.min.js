"use strict";
!(function (t) {
  const i = t("body.beehive");
  if (i.hasClass("activity") || i.hasClass("group-home")) {
    const e = t("#bp-nouveau-activity-form"),
      a = t("#rtmedia-add-media-button-post-update"),
      s = t("#activity-stream"),
      n = t("#rtmedia-action-update > span"),
      r = s[0],
      d = { childList: !0, subtree: !0 };
    if (
      (e.on("click", function () {
        const i = t(this).find("#whats-new"),
          e = beehive_data.activity_max;
        i.attr("maxlength", e),
          i.on("keyup", function () {
            t("#bp-nouveau-activity-form .char-count").length ||
              t(this).after('<span class="char-count mute"></span>');
            const i = t("#bp-nouveau-activity-form .char-count"),
              a = t(this).val().length,
              s = e - a;
            i.text(s);
          });
      }),
      n.length)
    ) {
      const m = n.text();
      n.removeAttr("style")
        .empty()
        .addClass("bp-tooltip")
        .attr("data-bp-tooltip", m)
        .append('<i class="uil-info-circle"></i>');
    }
    a.length &&
      a.append(
        '<span class="button-text">' + beehive_data.attachment_text + "</span>"
      );
    let o = new MutationObserver((t, i) => {
      for (let i of t)
        if ("childList" == i.type && i.addedNodes.length)
          for (let t of i.addedNodes)
            if (1 == t.nodeType) {
              if (t.classList.contains("activity-list"))
                for (let i of t.children)
                  i.classList.contains("activity-item") && (h(), l(), c());
              t.classList.contains("activity-item") && (h(), l(), c());
            }
    });
    if (r) {
      t(".activity-item", r).length && (l(), c()), o.observe(r, d);
    }
    function l() {
      t("li.activity_update, li.rtmedia_update, li.activity_share").each(
        function () {
          if (!t(this).hasClass("text-rendered")) {
            if (t(this).hasClass("activity_share")) {
              const i = t(this).find(".activity-inner .activity-inner"),
                e = i.find(".rtmedia-activity-container"),
                a = e.find(".rtmedia-activity-text");
              e.length || a.length
                ? a.addClass("activity-inner-text")
                : i.wrapInner('<div class="activity-inner-text"></div>');
              const s = t(this).find(".activity-inner-text"),
                n = s.find(".jetpack-video-wrapper");
              s.find(".jetpack-video-wrapper").remove(),
                s.length &&
                  s.shorten({
                    showChars: 230,
                    moreText: beehive_data.read_more.toLowerCase(),
                    lessText: beehive_data.read_close,
                  }),
                n.appendTo(s);
            } else {
              const i = t(this).find(".activity-inner"),
                e = i.find(".rtmedia-activity-container"),
                a = e.find(".rtmedia-activity-text");
              e.length || a.length
                ? a.addClass("activity-inner-text")
                : i.wrapInner('<div class="activity-inner-text"></div>');
              const s = t(this).find(".activity-inner-text"),
                n = s.find(".jetpack-video-wrapper");
              s.find(".jetpack-video-wrapper").remove(),
                s.length &&
                  s.shorten({
                    showChars: 230,
                    moreText: beehive_data.read_more.toLowerCase(),
                    lessText: beehive_data.read_close,
                  }),
                n.appendTo(s);
            }
            t(this).addClass("text-rendered");
          }
        }
      );
    }
    function c() {
      t(".activity-item .rtm-activity-media-list").each(function () {
        if (!t(this).hasClass("rtm-activity-list-rendered"))
          if (1 == beehive_data.rtm_is_masonry) {
            if (
              t(this).hasClass("rtm-activity-video-list") ||
              t(this).hasClass("rtm-activity-mixed-list")
            ) {
              t(this)
                .find(".rtmedia-list-item video")
                .each(function () {
                  t(this).attr("preload", !0);
                }),
                t(this).addClass("rtm-activity-list-rendered");
            }
          } else if (t(this).hasClass("rtm-activity-photo-list")) {
            const i = 4;
            if (t(this).children().length > i) {
              t(this)
                .find(".rtmedia-list-item")
                .filter(function (t) {
                  return t + 1 == i;
                })
                .addClass("more")
                .end()
                .filter(function (t) {
                  return t + 1 > i;
                })
                .hide(),
                t(this).addClass("rtm-activity-list-rendered");
            }
          } else if (
            t(this).hasClass("rtm-activity-video-list") ||
            t(this).hasClass("rtm-activity-music-list") ||
            t(this).hasClass("rtm-activity-mixed-list")
          )
            if (t(this).children().length > 1) {
              t(this)
                .find(".rtmedia-list-item video")
                .each(function () {
                  t(this).attr("preload", !0);
                }),
                t(this).wrap(
                  '<div class="rtm-activity-slider-container"></div>'
                ),
                t(this).addClass("swiper-wrapper"),
                t(this).find(".rtmedia-list-item").addClass("swiper-slide"),
                t(this).after('<div class="swiper-pagination"></div>'),
                new Swiper(".rtm-activity-slider-container", {
                  pagination: { el: ".swiper-pagination", clickable: !0 },
                }),
                t(this).addClass("rtm-activity-list-rendered");
            } else {
              t(this)
                .find(".rtmedia-list-item video")
                .each(function () {
                  t(this).attr("preload", !0);
                }),
                t(this).addClass("rtm-activity-list-rendered");
            }
      });
    }
    function h() {
      t("li.activity_update, li.rtmedia_update").each(function () {
        if (t(this).hasClass("url-preview-rendered")) return;
        const i = t(this).find(".rtmp_final_link");
        i.length &&
          (i.find("iframe").length && i.addClass("has-iframe"),
          i.insertAfter(t(this).find(".activity-header")),
          t(this).addClass("url-preview-rendered"));
      });
    }
  }
  if (i.hasClass("beehive-media")) {
    t(".rtmedia-uploader-div").length ||
      t(window).scroll(function () {
        const i = t(".rtmedia_gallery_wrapper").find(
          ".rtm-load-more a.show-it"
        );
        if (i.length && "block" == i.css("display")) {
          const e = i.offset().top - 50;
          t(window).scrollTop() + t(window).height() > e && i.trigger("click");
        }
      });
  }
  if (beehive_data.rtm_is_masonry) {
    let v = null;
    jQuery(document).ajaxComplete(function (i, e, a) {
      var s = get_parameter("action", a.data);
      ("activity_filter" !== s &&
        "post_update" !== s &&
        "get_single_activity_content" !== s &&
        "activity_get_older_updates" !== s) ||
        "undefined" == typeof rtmedia_masonry_layout ||
        "true" != rtmedia_masonry_layout ||
        "undefined" == typeof rtmedia_masonry_layout_activity ||
        "true" != rtmedia_masonry_layout_activity ||
        (t(
          "#activity-stream .rtmedia-activity-container .rtmedia-list img"
        ).off("load"),
        v && clearTimeout(v),
        (v = setTimeout(() => {
          let i = null;
          t(
            "#activity-stream .rtmedia-activity-container .rtmedia-list img"
          ).on("load", function () {
            i && clearTimeout(i),
              (i = setTimeout(() => {
                rtmedia_activity_masonry();
              }, 1e3));
          });
        }, 1e3)));
    });
  }
})(jQuery);
